{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14698\\\\Documents\\\\Courses\\\\CC\\\\RetailApp\\\\front-end\\\\src\\\\components\\\\Page4.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Backend_API\n} = require(\"../utils/Backend_API\");\n\nconst Page4 = props => {\n  _s();\n\n  const [dataSetName, setDataSetName] = useState(\"\");\n  const userName = sessionStorage.getItem(\"user_auth_token\");\n  const [userDatasetList, setUserDatasetList] = useState([]);\n  const history = useHistory();\n\n  const handleFilesUpload = async e => {\n    e.preventDefault(); //Prevents page reload\n\n    if (userDatasetList.includes(dataSetName)) {\n      alert(\"A data-set with that name exists!\");\n      return;\n    }\n\n    let transactionsFile = document.getElementById(\"transactionsFile\").files;\n    let productsFile = document.getElementById(\"productsFile\").files;\n    let householdsFile = document.getElementById(\"householdsFile\").files; //Now prepare the file for transfer\n\n    const file_data = new FormData();\n    file_data.append(\"csvFiles\", transactionsFile[0]);\n    file_data.append(\"csvFiles\", productsFile[0]);\n    file_data.append(\"csvFiles\", householdsFile[0]);\n\n    if (userName && dataSetName) {\n      const {\n        status\n      } = await fetch(Backend_API + `csvupload/${userName}/${dataSetName}`, {\n        method: \"POST\",\n        body: file_data\n      });\n\n      if (status === 200) {\n        console.log(\"Files inserted succesfully\");\n        history.push(\"/home/page1\");\n      }\n    } else {\n      console.log(\"user Name invalid\");\n      alert(\"An error occured\");\n    }\n  };\n\n  useEffect(() => {\n    async function getUserDataSetNames() {\n      //console.log(\"Fetching records of\", userName);\n      const response = await fetch(Backend_API + \"fetchDataSetNames\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          userName\n        })\n      });\n      let {\n        status\n      } = response;\n\n      if (status === 200) {\n        const {\n          dataSetNames\n        } = await response.json(response);\n        setUserDatasetList(dataSetNames);\n      }\n    }\n\n    getUserDataSetNames();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleFilesUpload(e),\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dataSetName,\n            onChange: e => setDataSetName(e.target.value),\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter Dataset Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"50%\",\n            margin: \"50px auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"HouseHolds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"transactionsFile\",\n                  name: \"csvFiles\",\n                  accept: \".csv\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"productsFile\",\n                  name: \"csvFiles\",\n                  accept: \".csv\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"householdsFile\",\n                  name: \"csvFiles\",\n                  accept: \".csv\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Page4, \"7tPWv5HDXqLoxQXWVimCOA8aJHQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Page4;\nexport default Page4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"sources":["C:/Users/14698/Documents/Courses/CC/RetailApp/front-end/src/components/Page4.js"],"names":["useState","useEffect","useHistory","Backend_API","require","Page4","props","dataSetName","setDataSetName","userName","sessionStorage","getItem","userDatasetList","setUserDatasetList","history","handleFilesUpload","e","preventDefault","includes","alert","transactionsFile","document","getElementById","files","productsFile","householdsFile","file_data","FormData","append","status","fetch","method","body","console","log","push","getUserDataSetNames","response","headers","JSON","stringify","dataSetNames","json","target","value","width","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { Backend_API } = require(\"../utils/Backend_API\");\r\n\r\n\r\nconst Page4 = (props) => {\r\n  const [dataSetName, setDataSetName] = useState(\"\");\r\n  const userName = sessionStorage.getItem(\"user_auth_token\");\r\n  const [userDatasetList, setUserDatasetList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleFilesUpload = async (e) => {\r\n    e.preventDefault(); //Prevents page reload\r\n\r\n    if (userDatasetList.includes(dataSetName)) {\r\n      alert(\"A data-set with that name exists!\");\r\n      return;\r\n    }\r\n\r\n    let transactionsFile = document.getElementById(\"transactionsFile\").files;\r\n    let productsFile = document.getElementById(\"productsFile\").files;\r\n    let householdsFile = document.getElementById(\"householdsFile\").files;\r\n\r\n    //Now prepare the file for transfer\r\n    const file_data = new FormData();\r\n    file_data.append(\"csvFiles\", transactionsFile[0]);\r\n    file_data.append(\"csvFiles\", productsFile[0]);\r\n    file_data.append(\"csvFiles\", householdsFile[0]);\r\n\r\n    if (userName && dataSetName) {\r\n      const { status } = await fetch(\r\n        Backend_API + `csvupload/${userName}/${dataSetName}`,\r\n        {\r\n          method: \"POST\",\r\n          body: file_data,\r\n        }\r\n      );\r\n      if (status === 200) {\r\n        console.log(\"Files inserted succesfully\");\r\n        history.push(\"/home/page1\");\r\n      }\r\n    } else {\r\n      console.log(\"user Name invalid\");\r\n      alert(\"An error occured\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function getUserDataSetNames() {\r\n      //console.log(\"Fetching records of\", userName);\r\n      const response = await fetch(Backend_API + \"fetchDataSetNames\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        method: \"POST\",\r\n        body: JSON.stringify({ userName }),\r\n      });\r\n      let { status } = response;\r\n      if (status === 200) {\r\n        const { dataSetNames } = await response.json(response);\r\n        setUserDatasetList(dataSetNames);\r\n      }\r\n    }\r\n    getUserDataSetNames();\r\n  }, []);\r\n  return (\r\n    <div id=\"mainContainer\">\r\n      <form\r\n        onSubmit={(e) => handleFilesUpload(e)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div className=\"mb-3\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={dataSetName}\r\n              onChange={(e) => setDataSetName(e.target.value)}\r\n              className=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Dataset Name\"\r\n              required\r\n            />\r\n          </div>\r\n          <table style={{ width: \"50%\", margin: \"50px auto\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Transactions</th>\r\n                <th>Products</th>\r\n                <th>HouseHolds</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"transactionsFile\"\r\n                    name=\"csvFiles\"\r\n                    accept=\".csv\"\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"productsFile\"\r\n                    name=\"csvFiles\"\r\n                    accept=\".csv\"\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"householdsFile\"\r\n                    name=\"csvFiles\"\r\n                    accept=\".csv\"\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page4;\r\n"]},"metadata":{},"sourceType":"module"}