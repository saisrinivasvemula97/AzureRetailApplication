{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14698\\\\Documents\\\\backup-Windows\\\\trainings\\\\CC_Proj\\\\cloud\\\\front-end\\\\src\\\\components\\\\Page1.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Backend_API\n} = require(\"../utils/Backend_API\");\n\nconst Page1 = props => {\n  _s();\n\n  const [houseHoldNumber, setHouseHoldNumber] = useState(\"\");\n  const userName = sessionStorage.getItem(\"user_auth_token\");\n  const [userDatasetList, setUserDatasetList] = useState([]); //console.log(\"Usrname:\", userName);\n\n  const fetchRecordsOfCustomer = async event => {\n    const getDataSetName = () => {\n      let name = userDatasetList[document.getElementById(\"dataSetName\").value];\n      return name;\n    };\n\n    event.preventDefault();\n\n    if (!houseHoldNumber) {\n      alert(\"Enter an household number\");\n      return;\n    }\n\n    let selectedDataSet = getDataSetName();\n    const response = await fetch(Backend_API + \"fetchData/\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify({\n        houseHoldNumber,\n        selectedDataSet,\n        userName\n      })\n    });\n    let {\n      status\n    } = response;\n\n    if (status === 200) {\n      const data = await response.json(response);\n      if (data) writeDataToTable(data);\n    } else {\n      alert(\"An Error Occured!\");\n    }\n  };\n\n  const writeDataToTable = data => {\n    function createTableHeaders(packet) {\n      let tableHeader = document.getElementById(\"tableHeader\");\n      let tableRow = document.createElement(\"tr\");\n\n      for (let heading in packet) {\n        let cell = document.createElement(\"th\");\n        let textNode = document.createTextNode(heading);\n        cell.appendChild(textNode);\n        tableRow.appendChild(cell);\n      }\n\n      tableHeader.appendChild(tableRow);\n    }\n\n    function createTableRows(packet) {\n      let tableBody = document.getElementById(\"tableBody\");\n      let tableRow = document.createElement(\"tr\");\n\n      for (let heading in packet) {\n        let cell = document.createElement(\"td\");\n        let value = packet[heading];\n        let textNode = document.createTextNode(value);\n        cell.appendChild(textNode);\n        tableBody.appendChild(cell);\n      }\n\n      tableBody.appendChild(tableRow);\n    }\n\n    function cleanPreviousHouseHoldRecords() {\n      let tableHead = document.getElementById(\"tableHeader\");\n      let tableBody = document.getElementById(\"tableBody\");\n      tableHead.querySelectorAll(\"*\").forEach(n => n.remove());\n      tableBody.querySelectorAll(\"*\").forEach(n => n.remove());\n    }\n\n    function validateDataPacket() {\n      const messageBanner = document.getElementById(\"messageDisplayArea\");\n\n      if (data.length === 0) {\n        messageBanner.style.display = \"block\";\n        messageBanner.innerHTML = \"HouseHold Number does not exist!\";\n      } else {\n        messageBanner.style.display = \"none\";\n      }\n    }\n\n    function handleDataInsertion() {\n      //Check if there are multiple transactions\n      if (data.length > 1) {\n        createTableHeaders(data[0]);\n      } else createTableHeaders(data); //Now insert the table rows\n\n\n      for (let packet of data) {\n        createTableRows(packet);\n      }\n    }\n\n    validateDataPacket();\n    cleanPreviousHouseHoldRecords();\n    handleDataInsertion();\n  };\n\n  useEffect(() => {\n    async function getUserDataSetNames() {\n      const response = await fetch(Backend_API + \"fetchDataSetNames\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          userName\n        })\n      });\n      let {\n        status\n      } = response;\n\n      if (status === 200) {\n        const {\n          dataSetNames\n        } = await response.json(response);\n        setUserDatasetList(dataSetNames); //console.log(dataSetNames);\n      }\n    }\n\n    getUserDataSetNames();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainContainer\",\n      style: {\n        textAlign: \"center\",\n        width: \"50%\",\n        margin: \"50px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sel1\",\n          children: \"Pick a DataSet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dataSetName\",\n          className: \"form-control m-2\",\n          children: userDatasetList.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: fetchRecordsOfCustomer,\n        style: {\n          border: \"none\",\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Enter HSHD_NUM here..\",\n          value: houseHoldNumber,\n          onChange: e => setHouseHoldNumber(e.target.value),\n          className: \"form-control bg-light mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-outline-danger my-2 my-sm-0\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messageDisplayArea\",\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"houseHoldDetails\",\n      style: {\n        fontSize: \"11px\"\n      },\n      className: \"table-primary table table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        id: \"tableHeader\",\n        className: \"table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"tableBody\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Page1, \"wBX+naXnwk2e6ghbqljih8MfXkw=\");\n\n_c = Page1;\nexport default Page1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"sources":["C:/Users/14698/Documents/backup-Windows/trainings/CC_Proj/cloud/front-end/src/components/Page1.js"],"names":["useState","useEffect","Backend_API","require","Page1","props","houseHoldNumber","setHouseHoldNumber","userName","sessionStorage","getItem","userDatasetList","setUserDatasetList","fetchRecordsOfCustomer","event","getDataSetName","name","document","getElementById","value","preventDefault","alert","selectedDataSet","response","fetch","headers","method","body","JSON","stringify","status","data","json","writeDataToTable","createTableHeaders","packet","tableHeader","tableRow","createElement","heading","cell","textNode","createTextNode","appendChild","createTableRows","tableBody","cleanPreviousHouseHoldRecords","tableHead","querySelectorAll","forEach","n","remove","validateDataPacket","messageBanner","length","style","display","innerHTML","handleDataInsertion","getUserDataSetNames","dataSetNames","textAlign","width","margin","map","index","border","marginLeft","e","target","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst { Backend_API } = require(\"../utils/Backend_API\");\r\n\r\nconst Page1 = (props) => {\r\n  const [houseHoldNumber, setHouseHoldNumber] = useState(\"\");\r\n  const userName = sessionStorage.getItem(\"user_auth_token\");\r\n  const [userDatasetList, setUserDatasetList] = useState([]);\r\n  //console.log(\"Usrname:\", userName);\r\n\r\n  const fetchRecordsOfCustomer = async (event) => {\r\n    const getDataSetName = () => {\r\n      let name = userDatasetList[document.getElementById(\"dataSetName\").value];\r\n      return name;\r\n    };\r\n    event.preventDefault();\r\n    if (!houseHoldNumber) {\r\n      alert(\"Enter an household number\");\r\n      return;\r\n    }\r\n    let selectedDataSet = getDataSetName();\r\n\r\n    const response = await fetch(Backend_API + \"fetchData/\", {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        houseHoldNumber,\r\n        selectedDataSet,\r\n        userName,\r\n      }),\r\n    });\r\n    let { status } = response;\r\n    if (status === 200) {\r\n      const data = await response.json(response);\r\n      if (data) writeDataToTable(data);\r\n    } else {\r\n      alert(\"An Error Occured!\");\r\n    }\r\n  };\r\n  const writeDataToTable = (data) => {\r\n    function createTableHeaders(packet) {\r\n      let tableHeader = document.getElementById(\"tableHeader\");\r\n      let tableRow = document.createElement(\"tr\");\r\n      for (let heading in packet) {\r\n        let cell = document.createElement(\"th\");\r\n        let textNode = document.createTextNode(heading);\r\n        cell.appendChild(textNode);\r\n        tableRow.appendChild(cell);\r\n      }\r\n      tableHeader.appendChild(tableRow);\r\n    }\r\n    function createTableRows(packet) {\r\n      let tableBody = document.getElementById(\"tableBody\");\r\n      let tableRow = document.createElement(\"tr\");\r\n      for (let heading in packet) {\r\n        let cell = document.createElement(\"td\");\r\n        let value = packet[heading];\r\n        let textNode = document.createTextNode(value);\r\n        cell.appendChild(textNode);\r\n        tableBody.appendChild(cell);\r\n      }\r\n      tableBody.appendChild(tableRow);\r\n    }\r\n    function cleanPreviousHouseHoldRecords() {\r\n      let tableHead = document.getElementById(\"tableHeader\");\r\n      let tableBody = document.getElementById(\"tableBody\");\r\n      tableHead.querySelectorAll(\"*\").forEach((n) => n.remove());\r\n      tableBody.querySelectorAll(\"*\").forEach((n) => n.remove());\r\n    }\r\n    function validateDataPacket() {\r\n      const messageBanner = document.getElementById(\"messageDisplayArea\");\r\n      if (data.length === 0) {\r\n        messageBanner.style.display = \"block\";\r\n        messageBanner.innerHTML = \"HouseHold Number does not exist!\";\r\n      } else {\r\n        messageBanner.style.display = \"none\";\r\n      }\r\n    }\r\n    function handleDataInsertion() {\r\n      //Check if there are multiple transactions\r\n      if (data.length > 1) {\r\n        createTableHeaders(data[0]);\r\n      } else createTableHeaders(data);\r\n      //Now insert the table rows\r\n      for (let packet of data) {\r\n        createTableRows(packet);\r\n      }\r\n    }\r\n    validateDataPacket();\r\n    cleanPreviousHouseHoldRecords();\r\n    handleDataInsertion();\r\n  };\r\n  useEffect(() => {\r\n    async function getUserDataSetNames() {\r\n      const response = await fetch(Backend_API + \"fetchDataSetNames\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        method: \"POST\",\r\n        body: JSON.stringify({ userName }),\r\n      });\r\n      let { status } = response;\r\n      if (status === 200) {\r\n        const { dataSetNames } = await response.json(response);\r\n        setUserDatasetList(dataSetNames);\r\n        //console.log(dataSetNames);\r\n      }\r\n    }\r\n    getUserDataSetNames();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"mainContainer\"\r\n        style={{ textAlign: \"center\", width: \"50%\", margin: \"50px auto\" }}\r\n      >\r\n        <div>\r\n          <label htmlFor=\"sel1\">Pick a DataSet:</label>\r\n          <select id=\"dataSetName\" className=\"form-control m-2\">\r\n            {userDatasetList.map((name, index) => (\r\n              <option key={name} value={index}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <form\r\n          onSubmit={fetchRecordsOfCustomer}\r\n          style={{ border: \"none\", marginLeft: \"10px\" }}\r\n        >\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Enter HSHD_NUM here..\"\r\n            value={houseHoldNumber}\r\n            onChange={(e) => setHouseHoldNumber(e.target.value)}\r\n            className=\"form-control bg-light mb-4\"\r\n          />\r\n          <button class=\"btn btn-outline-danger my-2 my-sm-0\">Search</button>\r\n        </form>\r\n\r\n        <div id=\"messageDisplayArea\">\r\n          <br></br>\r\n        </div>\r\n      </div>\r\n      <table\r\n        id=\"houseHoldDetails\"\r\n        style={{ fontSize: \"11px\" }}\r\n        className=\"table-primary table table-sm\"\r\n      >\r\n        <thead id=\"tableHeader\" className=\"table\"></thead>\r\n        <tbody id=\"tableBody\"></tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1;\r\n"]},"metadata":{},"sourceType":"module"}