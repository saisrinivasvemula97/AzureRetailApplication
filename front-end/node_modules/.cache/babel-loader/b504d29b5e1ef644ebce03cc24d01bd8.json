{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14698\\\\Documents\\\\backup-Windows\\\\trainings\\\\CC_Proj\\\\cloud\\\\front-end\\\\src\\\\components\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PeopleOutlineSharpIcon from '@material-ui/icons/PeopleOutlineSharp';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Backend_API\n} = require(\"../utils/Backend_API\");\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: purple[500]\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: '#11cb5f'\n    }\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst LoginPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const authenticateUser = async event => {\n    event.preventDefault(); //console.log(\"here\");\n\n    const responseFromServer = await fetch(Backend_API + \"authenticateUser/\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify({\n        userName,\n        password\n      })\n    });\n    let {\n      status\n    } = responseFromServer;\n\n    if (status === 200) {\n      const userData = await responseFromServer.json(responseFromServer);\n      validateUserCreds(userData);\n    } else {\n      alert(\"An Error Occured!\");\n    }\n\n    function validateUserCreds(userData) {\n      if (userData.password === password) {\n        sessionStorage.setItem(\"user_auth_token\", userName);\n        history.push('/home');\n      } else {\n        alert(\"UserName does not exist or Password is incorrect\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(PeopleOutlineSharpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Team 23 - Three Musketeers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: e => authenticateUser(e),\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"userName\",\n            label: \"Username\",\n            name: \"username\",\n            autoFocus: true,\n            onChange: e => setUserName(e.target.value),\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/signup\",\n                variant: \"body2\",\n                children: \"Don't have an account? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}; // const LoginPage = () => {\n//   const [userName, setUserName] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const history = useHistory();\n//   const authenticateUser = async (event) => {\n//     event.preventDefault();\n//     //console.log(\"here\");\n//     const responseFromServer = await fetch(Backend_API + \"authenticateUser/\", {\n//       headers: { \"Content-Type\": \"application/json\" },\n//       method: \"post\",\n//       body: JSON.stringify({ userName, password }),\n//     });\n//     let { status } = responseFromServer;\n//     if (status === 200) {\n//       const userData = await responseFromServer.json(responseFromServer);\n//       validateUserCreds(userData);\n//     } else {\n//       alert(\"An Error Occured!\");\n//     }\n//     function validateUserCreds(userData) {\n//       if (userData.password === password) {\n//         sessionStorage.setItem(\"user_auth_token\", userName);\n//         history.push('/home');\n//       } else {\n//         alert(\"UserName does not exist or Password is incorrect\");\n//       }\n//     }\n//   };\n//   return (\n//     <Container maxWidth=\"sm\">\n//     {/* <div className=\"Login\"> */}\n//     <PeopleOutlineSharpIcon />\n//       <h4>Team-29(Ceaseless)</h4>\n//       <form onSubmit={(e) => authenticateUser(e)}>\n//         <div class=\"container\">\n//           <label>Username : </label>\n//           <input\n//             type=\"text\"\n//             value={userName}\n//             placeholder=\"Enter Username\"\n//             name=\"username\"\n//             onChange={(e) => setUserName(e.target.value)}\n//             required\n//           />\n//           <label>Password : </label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Enter Password\"\n//             name=\"password\"\n//             required\n//           />\n//           <button type=\"submit\">Login</button>\n//           <br></br>\n//           <a href=\"/signup\">Click here to sign up</a>\n//         </div>\n//       </form>\n//     {/* </div> */}\n//     </Container>\n//   );\n// };\n\n\n_s(LoginPage, \"Sv70t9oJTzvwpvBMoecCiidSTv0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/14698/Documents/backup-Windows/trainings/CC_Proj/cloud/front-end/src/components/LoginPage.js"],"names":["React","useState","useHistory","PeopleOutlineSharpIcon","Avatar","Button","CssBaseline","TextField","Link","Grid","LockOutlinedIcon","Typography","makeStyles","Container","createTheme","ThemeProvider","Backend_API","require","theme","palette","primary","main","purple","secondary","useStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","LoginPage","classes","userName","setUserName","password","setPassword","history","authenticateUser","event","preventDefault","responseFromServer","fetch","headers","method","body","JSON","stringify","status","userData","json","validateUserCreds","alert","sessionStorage","setItem","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PeopleOutlineSharpIcon from '@material-ui/icons/PeopleOutlineSharp';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst { Backend_API } = require(\"../utils/Backend_API\");\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: '#11cb5f',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const authenticateUser = async (event) => {\r\n    event.preventDefault();\r\n    //console.log(\"here\");\r\n\r\n    const responseFromServer = await fetch(Backend_API + \"authenticateUser/\", {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      method: \"post\",\r\n      body: JSON.stringify({ userName, password }),\r\n    });\r\n    let { status } = responseFromServer;\r\n    if (status === 200) {\r\n      const userData = await responseFromServer.json(responseFromServer);\r\n      validateUserCreds(userData);\r\n    } else {\r\n      alert(\"An Error Occured!\");\r\n    }\r\n    function validateUserCreds(userData) {\r\n      if (userData.password === password) {\r\n        sessionStorage.setItem(\"user_auth_token\", userName);\r\n        history.push('/home');\r\n      } else {\r\n        alert(\"UserName does not exist or Password is incorrect\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleOutlineSharpIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Team 23 - Three Musketeers\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => authenticateUser(e)} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            value={userName}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// const LoginPage = () => {\r\n//   const [userName, setUserName] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const history = useHistory();\r\n//   const authenticateUser = async (event) => {\r\n//     event.preventDefault();\r\n//     //console.log(\"here\");\r\n\r\n//     const responseFromServer = await fetch(Backend_API + \"authenticateUser/\", {\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       method: \"post\",\r\n//       body: JSON.stringify({ userName, password }),\r\n//     });\r\n//     let { status } = responseFromServer;\r\n//     if (status === 200) {\r\n//       const userData = await responseFromServer.json(responseFromServer);\r\n//       validateUserCreds(userData);\r\n//     } else {\r\n//       alert(\"An Error Occured!\");\r\n//     }\r\n//     function validateUserCreds(userData) {\r\n//       if (userData.password === password) {\r\n//         sessionStorage.setItem(\"user_auth_token\", userName);\r\n//         history.push('/home');\r\n//       } else {\r\n//         alert(\"UserName does not exist or Password is incorrect\");\r\n//       }\r\n//     }\r\n//   };\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//     {/* <div className=\"Login\"> */}\r\n//     <PeopleOutlineSharpIcon />\r\n//       <h4>Team-29(Ceaseless)</h4>\r\n//       <form onSubmit={(e) => authenticateUser(e)}>\r\n//         <div class=\"container\">\r\n//           <label>Username : </label>\r\n\r\n//           <input\r\n//             type=\"text\"\r\n//             value={userName}\r\n//             placeholder=\"Enter Username\"\r\n//             name=\"username\"\r\n//             onChange={(e) => setUserName(e.target.value)}\r\n//             required\r\n//           />\r\n\r\n//           <label>Password : </label>\r\n\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             placeholder=\"Enter Password\"\r\n//             name=\"password\"\r\n//             required\r\n//           />\r\n\r\n//           <button type=\"submit\">Login</button>\r\n//           <br></br>\r\n//           <a href=\"/signup\">Click here to sign up</a>\r\n//         </div>\r\n//       </form>\r\n//     {/* </div> */}\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}